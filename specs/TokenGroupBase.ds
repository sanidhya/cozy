// Lucene TokenGroup.
// https://github.com/apache/lucene-solr/blob/master/lucene/highlighter/src/java/org/apache/lucene/search/highlight/TokenGroup.java

{{
package org.apache.lucene.search.highlight;

import org.apache.lucene.analysis.TokenStream;
import org.apache.lucene.analysis.tokenattributes.CharTermAttribute;
import org.apache.lucene.analysis.tokenattributes.OffsetAttribute;
}}

TokenGroupBase:
    type Float = Native "Float"
    type OffsetAttribute = Native "OffsetAttribute"
    type CharTermAttribute = Native "CharTermAttribute"

    type Token = {
        score : Float,
        startOffset : Int,
        endOffset : Int
    }

    extern startOffset(att : OffsetAttribute) : Int = "{att}.startOffset()"
    extern endOffset(att : OffsetAttribute) : Int = "{att}.endOffset()"

    extern floatAdd(val1 : Float, val2 : Float) : Float = "{val1} + {val2}"
    extern floatZero() : Float = "0.0f"
    extern floatAddOne(val : Float) : Float = "{val} + 1.0f"
    extern floatGtZero(val : Float) : Bool = "{val} > 0.0f"

    state tokens : Set<(Int, Token)>
    state tot : Float
    state matchStartOffset : Int
    state matchEndOffset : Int

    state offset : OffsetAttribute

    assume unique [s.0 | s <- tokens];
    assume unique [s | s <- tokens];
    assume len tokens < 50;

    op setOffset(o : OffsetAttribute)
        offset = o

    op addTokenScore(score : Float)
        assume not ((len tokens) in [s.0 | s <- tokens]);
        tokens.add((len tokens, { score: score, startOffset: 0, endOffset: 0 }))

    op addTokenTotal(score : Float)
        tot = floatAdd(tot, score)

    op clearTot()
        tot = floatZero()

    query getScore(i : Int)
        assume i >= 0 and i < len tokens;
        (the [s.1 | s <- tokens, s.0 == i]).score

    query getStartOffset()
        min [tok.1.startOffset | tok <- tokens, floatGtZero(tok.1.score)]

    query getEndOffset()
        max [tok.1.endOffset | tok <- tokens, floatGtZero(tok.1.score)]

    query getNumTokens()
        len tokens

    query getTokenFloats()
        [s.1.score | s <- tokens]

    //query getTotalScore()
    //    sum tokens
    // must implement in subclass; cozy won't sum floats.
